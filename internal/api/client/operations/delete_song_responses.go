// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/TestAssignment/internal/api/definition"
)

// DeleteSongReader is a Reader for the DeleteSong structure.
type DeleteSongReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSongReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteSongOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteSongBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteSongInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /song/{id}] DeleteSong", response, response.Code())
	}
}

// NewDeleteSongOK creates a DeleteSongOK with default headers values
func NewDeleteSongOK() *DeleteSongOK {
	return &DeleteSongOK{}
}

/*
DeleteSongOK describes a response with status code 200, with default header values.

Delete Song Response
*/
type DeleteSongOK struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete song o k response has a 2xx status code
func (o *DeleteSongOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete song o k response has a 3xx status code
func (o *DeleteSongOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete song o k response has a 4xx status code
func (o *DeleteSongOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete song o k response has a 5xx status code
func (o *DeleteSongOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete song o k response a status code equal to that given
func (o *DeleteSongOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete song o k response
func (o *DeleteSongOK) Code() int {
	return 200
}

func (o *DeleteSongOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /song/{id}][%d] deleteSongOK %s", 200, payload)
}

func (o *DeleteSongOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /song/{id}][%d] deleteSongOK %s", 200, payload)
}

func (o *DeleteSongOK) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteSongOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSongBadRequest creates a DeleteSongBadRequest with default headers values
func NewDeleteSongBadRequest() *DeleteSongBadRequest {
	return &DeleteSongBadRequest{}
}

/*
DeleteSongBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteSongBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete song bad request response has a 2xx status code
func (o *DeleteSongBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete song bad request response has a 3xx status code
func (o *DeleteSongBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete song bad request response has a 4xx status code
func (o *DeleteSongBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete song bad request response has a 5xx status code
func (o *DeleteSongBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete song bad request response a status code equal to that given
func (o *DeleteSongBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete song bad request response
func (o *DeleteSongBadRequest) Code() int {
	return 400
}

func (o *DeleteSongBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /song/{id}][%d] deleteSongBadRequest %s", 400, payload)
}

func (o *DeleteSongBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /song/{id}][%d] deleteSongBadRequest %s", 400, payload)
}

func (o *DeleteSongBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteSongBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSongInternalServerError creates a DeleteSongInternalServerError with default headers values
func NewDeleteSongInternalServerError() *DeleteSongInternalServerError {
	return &DeleteSongInternalServerError{}
}

/*
DeleteSongInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteSongInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete song internal server error response has a 2xx status code
func (o *DeleteSongInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete song internal server error response has a 3xx status code
func (o *DeleteSongInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete song internal server error response has a 4xx status code
func (o *DeleteSongInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete song internal server error response has a 5xx status code
func (o *DeleteSongInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete song internal server error response a status code equal to that given
func (o *DeleteSongInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete song internal server error response
func (o *DeleteSongInternalServerError) Code() int {
	return 500
}

func (o *DeleteSongInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /song/{id}][%d] deleteSongInternalServerError %s", 500, payload)
}

func (o *DeleteSongInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /song/{id}][%d] deleteSongInternalServerError %s", 500, payload)
}

func (o *DeleteSongInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteSongInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
