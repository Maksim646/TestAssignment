// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/TestAssignment/internal/api/definition"
)

// CreateSongReader is a Reader for the CreateSong structure.
type CreateSongReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSongReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateSongOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateSongBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateSongForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateSongUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateSongInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /song] CreateSong", response, response.Code())
	}
}

// NewCreateSongOK creates a CreateSongOK with default headers values
func NewCreateSongOK() *CreateSongOK {
	return &CreateSongOK{}
}

/*
CreateSongOK describes a response with status code 200, with default header values.

Register Response
*/
type CreateSongOK struct {
	Payload *models.Error
}

// IsSuccess returns true when this create song o k response has a 2xx status code
func (o *CreateSongOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create song o k response has a 3xx status code
func (o *CreateSongOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create song o k response has a 4xx status code
func (o *CreateSongOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create song o k response has a 5xx status code
func (o *CreateSongOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create song o k response a status code equal to that given
func (o *CreateSongOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create song o k response
func (o *CreateSongOK) Code() int {
	return 200
}

func (o *CreateSongOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /song][%d] createSongOK %s", 200, payload)
}

func (o *CreateSongOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /song][%d] createSongOK %s", 200, payload)
}

func (o *CreateSongOK) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateSongOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSongBadRequest creates a CreateSongBadRequest with default headers values
func NewCreateSongBadRequest() *CreateSongBadRequest {
	return &CreateSongBadRequest{}
}

/*
CreateSongBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateSongBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create song bad request response has a 2xx status code
func (o *CreateSongBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create song bad request response has a 3xx status code
func (o *CreateSongBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create song bad request response has a 4xx status code
func (o *CreateSongBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create song bad request response has a 5xx status code
func (o *CreateSongBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create song bad request response a status code equal to that given
func (o *CreateSongBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create song bad request response
func (o *CreateSongBadRequest) Code() int {
	return 400
}

func (o *CreateSongBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /song][%d] createSongBadRequest %s", 400, payload)
}

func (o *CreateSongBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /song][%d] createSongBadRequest %s", 400, payload)
}

func (o *CreateSongBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateSongBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSongForbidden creates a CreateSongForbidden with default headers values
func NewCreateSongForbidden() *CreateSongForbidden {
	return &CreateSongForbidden{}
}

/*
CreateSongForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateSongForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create song forbidden response has a 2xx status code
func (o *CreateSongForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create song forbidden response has a 3xx status code
func (o *CreateSongForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create song forbidden response has a 4xx status code
func (o *CreateSongForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create song forbidden response has a 5xx status code
func (o *CreateSongForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create song forbidden response a status code equal to that given
func (o *CreateSongForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create song forbidden response
func (o *CreateSongForbidden) Code() int {
	return 403
}

func (o *CreateSongForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /song][%d] createSongForbidden %s", 403, payload)
}

func (o *CreateSongForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /song][%d] createSongForbidden %s", 403, payload)
}

func (o *CreateSongForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateSongForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSongUnprocessableEntity creates a CreateSongUnprocessableEntity with default headers values
func NewCreateSongUnprocessableEntity() *CreateSongUnprocessableEntity {
	return &CreateSongUnprocessableEntity{}
}

/*
CreateSongUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type CreateSongUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this create song unprocessable entity response has a 2xx status code
func (o *CreateSongUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create song unprocessable entity response has a 3xx status code
func (o *CreateSongUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create song unprocessable entity response has a 4xx status code
func (o *CreateSongUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create song unprocessable entity response has a 5xx status code
func (o *CreateSongUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create song unprocessable entity response a status code equal to that given
func (o *CreateSongUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create song unprocessable entity response
func (o *CreateSongUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateSongUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /song][%d] createSongUnprocessableEntity %s", 422, payload)
}

func (o *CreateSongUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /song][%d] createSongUnprocessableEntity %s", 422, payload)
}

func (o *CreateSongUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateSongUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSongInternalServerError creates a CreateSongInternalServerError with default headers values
func NewCreateSongInternalServerError() *CreateSongInternalServerError {
	return &CreateSongInternalServerError{}
}

/*
CreateSongInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type CreateSongInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this create song internal server error response has a 2xx status code
func (o *CreateSongInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create song internal server error response has a 3xx status code
func (o *CreateSongInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create song internal server error response has a 4xx status code
func (o *CreateSongInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create song internal server error response has a 5xx status code
func (o *CreateSongInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create song internal server error response a status code equal to that given
func (o *CreateSongInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create song internal server error response
func (o *CreateSongInternalServerError) Code() int {
	return 500
}

func (o *CreateSongInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /song][%d] createSongInternalServerError %s", 500, payload)
}

func (o *CreateSongInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /song][%d] createSongInternalServerError %s", 500, payload)
}

func (o *CreateSongInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateSongInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
