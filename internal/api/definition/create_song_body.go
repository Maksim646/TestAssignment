// Code generated by go-swagger; DO NOT EDIT.

package definition

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateSongBody create song body
//
// swagger:model CreateSongBody
type CreateSongBody struct {

	// group
	// Required: true
	Group *string `json:"group"`

	// song
	// Required: true
	Song *string `json:"song"`
}

// Validate validates this create song body
func (m *CreateSongBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGroup(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSong(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateSongBody) validateGroup(formats strfmt.Registry) error {

	if err := validate.Required("group", "body", m.Group); err != nil {
		return err
	}

	return nil
}

func (m *CreateSongBody) validateSong(formats strfmt.Registry) error {

	if err := validate.Required("song", "body", m.Song); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create song body based on context it is used
func (m *CreateSongBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateSongBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateSongBody) UnmarshalBinary(b []byte) error {
	var res CreateSongBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
